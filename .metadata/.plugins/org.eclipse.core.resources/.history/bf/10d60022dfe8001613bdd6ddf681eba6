
public class TempControl implements Runnable {
	private volatile boolean running = true;
	
	@Override
	public void run() {

		while (running) {
			double currTemp = getTemp();
			
			if(currTemp< 0){//target - threshold
				heaterOn();
			}else if(currTemp >= 0){//target
				heaterOff();
			}
			
			try {
				Thread.sleep(1000);
			} catch (InterruptedException e) {
				System.out.println("Could not sleep!");
			}
			
			System.out.println("still running");
		}
		
		System.out.println("done");
	}

	public void shutdown() {
		running = false;
	}
	
	
	private double getTemp(){
		return -1;
	}
	
	private void heaterOn(){
	
	}
	
	private void heaterOff(){
		
	}
	
	@Override
	/*public void start() {
		while (running) {
			double currTemp = getTemp();
			
			if(currTemp< 0){//target - threshold
				heaterOn();
			}else if(currTemp >= 0){//target
				heaterOff();
			}
			
			try {
				Thread.sleep(1000);
			} catch (InterruptedException e) {
				System.out.println("Could not sleep!");
			}
			
			System.out.println("still running start");
		}
		
		System.out.println("done");
	}*/
	
	
}
