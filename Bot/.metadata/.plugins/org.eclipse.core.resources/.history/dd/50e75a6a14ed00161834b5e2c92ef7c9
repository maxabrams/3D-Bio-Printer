import java.awt.AWTException;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.Robot;
import java.awt.image.BufferedImage;
import java.awt.image.DataBufferInt;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;

public class Bot {
	private Robot bot;
	private int xMin;
	private int yMin;
	private int xMax;
	private int yMax;
	private int x;
	private int y;
	private PlayBoundry gamePanel;
	
	public Bot(int x, int y, int xMax, int yMax, PlayBoundry panel) throws AWTException{
		xMin = x;
		yMin = y;
		this.xMax = xMax;
		this.yMax = yMax;
		this.x = x;
		this.y = y;
		gamePanel = panel;
		bot = new Robot();
	}
	
	public void start(){
	    move(x+200, y+550);
		searchScreen();
	}
	
	private void move(int x, int y){
		System.out.println("Here");
		while(this.x != x && this.y != y){
			if(this.x != x && Math.random()<.2){
				//Move x
				System.out.println("Move x");
				if(this.x < x){
					this.x = this.x + 1;	
				}else{
					this.x = this.x - 1;
				}
				try {
					
					Thread.sleep((long) (8.0*Math.random()+1));
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
			}
	
			if(this.y != y && Math.random()<.2){
				//Move y
				System.out.println("Move y");
				if(this.y < y){
					this.y = this.y + 1;
				}else{
					this.y = this.y -1;
				}
				
				bot.mouseMove(this.x, this.y);
				
				try {
					Thread.sleep((long) (8.0*Math.random()+1));
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
			}
		}
	}
	
	private Point searchScreen(){
		BufferedImage cap = bot.createScreenCapture(new Rectangle(xMin, yMin, xMax, yMax));
		File outputfile = new File("saved.png");
		try {
			ImageIO.write(cap, "png", outputfile);
		} catch (IOException e) {
			e.printStackTrace();
		}
		int[] pixels = new int[cap.getWidth()*cap.getHeight()];
		cap.getRGB(0,0, cap.getWidth(), cap.getHeight(), pixels, 0, cap.getWidth());
		int pixColor;
		int blue;
		int green;
		int red;
		for(int xLoc = 0; xLoc < cap.getWidth(); xLoc++){
			for(int yLoc = 0; yLoc < cap.getHeight(); yLoc++){
				pixColor = pixels[cap.getWidth() * yLoc + xLoc ];
				blue = pixColor & 0xff;
				green = (pixColor & 0xff00) >> 8;
				red = (pixColor & 0xff0000) >> 16;
				//System.out.println(red + " " + green + " " + blue);
				if( red >= 100 && blue < 50 && green < 50){
					//int x = i/get
					//gamePanel.paintImmediately(x, y, w, h);
					gamePanel.addPoint(new Point(xLoc, yLoc));
				}
			}
		}
		gamePanel.refresh();
		//int[] pixels = ((DataBufferInt)cap.getRaster().getDataBuffer()).getData();
		return new Point();
	}
	
}
